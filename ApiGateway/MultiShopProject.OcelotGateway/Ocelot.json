{
  "Routes": [
    //Catalog Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}", //karşılayacağımız kısım : api, everything: api'dan sonra ne gelirse gelsin karşılayacaktır. ocelot komutudur.
      "DownstreamScheme": "http", //default : https idi fakat bir http ile çalışacağız.
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost", //default : jsonplaceholder.typicode.com fakat biz localhost için çalışacağız.--> fakat api'yi production ortama alacaksak ayrı bir json dosyası oluşturmamız gerekecek.
          "Port": 7192 // Catalog microservice port no.
        }
      ],
      "UpstreamPathTemplate": "/services/catalog/{everything}", //services içerisindeki catalog'dan istek gelecek.
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], //her türlü api metoduna izin veriyoruz.
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CatalogFullPermission" ] //İzin verilen yetkiler olarak düşünülebilir.
      }
    },
    //Discount Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7193
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "DiscountFullPermission" ]
      }
    },
    //Order Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7194
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "OrderFullPermission" ]
      }
    },
    //Cargo Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7195
        }
      ],
      "UpstreamPathTemplate": "/services/cargo/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CargoFullPermission" ]
      }
    },
    //Basket Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7196
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "BasketFullPermission" ]
      }
    },

    //Message Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7199
        }
      ],
      "UpstreamPathTemplate": "/services/message/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "MessageFullPermission" ]
      }
    },
    //Comment Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7170
        }
      ],
      "UpstreamPathTemplate": "/services/comment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CommentFullPermission" ]
      }
    },
    //Payment Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7197
        }
      ],
      "UpstreamPathTemplate": "/services/payment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "PaymentFullPermission" ]
      }
    },
    //Images Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7198
        }
      ],
      "UpstreamPathTemplate": "/services/images/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "ImagesFullPermission" ]
      }
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5000" //default https
  }
}

//Upstream : Client tarafından bize gelen isteğin olduğu kısmı temsil eder.
//Downstream : Bu gelen isteği ocelot tarafında nasıl karşılayıp, nasıl göndereceğiz? yani request'e verdiğimiz yanıtı temsil eder.